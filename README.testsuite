Extension:Moderation has an automated testsuite.

== What is the automated testsuite? ==

This is a collection of tests which check operability of Moderation extension.

By running those tests, we can check if some modification to Moderation or to
the MediaWiki core itself (e.g. when new version of MediaWiki is released)
causes a regression (side effect bug).

The tests of Moderation are focused on "black box" testing,
meaning that instead of checking internal database only,
we check the exact behavior that real users face by duplicating their actions
and looking at the results through the user interface
and parts of MediaWiki API not related to Moderation.

== Invocation ==

WARNING: THIS TEST DOESN'T PRESERVE EXISTING DATABASE. EVERYTHING IS DELETED.

1) Checkout 'core/tests' from the MediaWiki core repository (this directory is
not supplied in MediaWiki release tarballs) and move it to MediaWiki directory.

2) Go into the MediaWiki directory.

3) Run the following command:

for i in extensions/Moderation/tests/phpunit/*.php; do tests/phpunit/phpunit.php $i; done

== Writing new tests ==

File [tests/ModerationTestsuite.php] is the general framework
for blackbox testing of Extension:Moderation.

It provides the following:

1) methods to access the MediaWiki API (NOT via internal invocation).

2) automated creation of test users and clean test environment.

3) methods to fetch Special:Moderation, parse it into the array of entries
(ModerationTestsuiteEntry) and compare two snapshots of Special:Moderation.

== List of existing tests ==

1. [ModerationTestInterceptEdit.php]
	Answers the question: "Are the new edits indeed intercepted?"
	Here we check that
	1) edits are stopped with 'edit-hook-aborted' code,
	2) new entry appears on Special:Moderation,
	3) user is properly redirected after the edit,
	4) "ext.moderation.notify" module is loaded after the redirect.

2. [ModerationTestAutomoderated.php]
	Answers the question: "Do automoderated users bypass moderation?"
	Here we check that
	1) edits of automoderated user immediately succeed,
	2) no new entries appear on Special:Moderation.

3. [ModerationTestApprove.php]
	Answers the question: "Does the Approve(all) link work as expected?"
	Here we check that
	1) the page is indeed modified when Approve is clicked,
	2) the newly approved edit is removed from Special:Moderation,
	3) all pending edits of the same user are approved by Approveall,
	4) edits of other users are unaffected by Approveall,
	5) rejected edits are unaffected by Approveall,
	6) rejected edit can be approved by Approve,
	7) option $wgModerationTimeToOverrideRejection works correctly,
	8) moderator needs to be automoderated to bypass moderation,
	9) moderator doesn't need to be automoderated to Approve(all),
	10) approved edit has correct timestamp in page history,
	11) approved edit doesn't "appear in the past" in RecentChanges,
	12) proper log entry is created about the fact of approval,
	13) approval log entries are properly formatted on Special:Log.

4. [ModerationTestReject.php]
	Answers the question: "Does the Reject(all) link work as expected?"
	Here we check that
	1) rejected edits are removed from the Pending folder,
	2) rejected edits are added to the Rejected folder,
	3) the moderator's name is recorded,
	4) rejection flags (batch/auto) are set properly,
	5) rejected edits don't have ApproveAll/Reject/RejectAll links,
	6) edits of other users are unaffected by Rejectall,
	7) proper log entry is created about the fact of rejection,
	8) rejection log entries are properly formatted on Special:Log.

5. [ModerationTestPermissions.php]
	Answers the question: "Is Special:Moderation for moderators only?"
	Here we check that
	1) unprivileged user gets permissions error on Special:Moderation.

6. [ModerationTestTokens.php]
	Answers the question: "Are the tokens required on Special:Moderation?"
	Here we check that
	1) non-readonly actions don't work without a token,
	2) non-readonly actions don't work with incorrect token.

7. [ModerationTestShow.php]
	Answers the question: "Does the Show link work as expected?"
	Here we check that
	1) Show link doesn't have a token and works without it,
	2) Show link opens a difference page with a correct HTML title,
	3) added, deleted and context lines on the difference page are correct,
	4) correct thumbnail image is shown for uploads,
	5) ShowImage URL doesn't have a token,
	6) thumbnail image is wrapped in a link to the full image,
	7) checksum of the full image is correct,
	8) content-type and content-disposition headers are correct,
	9) thumbnail of small image has the same width/height,
	10) thumbnail of large image is THUMB_WIDTH wide, ratio is preserved,
	11) correct message is displayed for uploads without description.

8. [ModerationTestUpload.php]
	Answers the question: "Are uploads intercepted? Can they be approved?"
	Here we check that
	1) uploads are stopped with 'moderation-image-queued' code,
	2) new entry appears on Special:Moderation,
	3) the file is indeed uploaded when Approve is clicked,
	4) usual checks like "is this an empty file?" are NOT skipped,
	5) image reuploads are queued for moderation and can be approved,
	6) image reuploads are attributed to the user who made them,
	7) correct message for reuploads is displayed by modaction=show.

9. [ModerationTestErrors.php]
	Answers the question: "Do all our safety/sanity checks catch errors?"
	Here we check the following conditions:
	1) moderation-unknown-modaction
	2) moderation-edit-not-found
	3) moderation-already-rejected
	4) moderation-nothing-to-rejectall
	5) moderation-nothing-to-approveall
	6) moderation-missing-stashed-image
	7) edit-no-change

10. [ModerationTestCheckuser.php]
	Answers the question: "Does checkuser-related stuff work correctly?"
	Here we check that
	1) moderator without 'moderation-checkuser' right can't see IPs,
	2) moderator with 'moderation-checkuser' right can see IPs,
	3) user-agent of whoever made the edit is saved in cu_changes table.

11. [ModerationTestBlock.php]
	Answers the question: "Do the Block/Unblock links work as expected?"
	Here we check that
	1) Unblock (Block) link is only shown for blocked (non-blocked) user,
	2) new edits from blocked user appear in the Spam folder,
	3) rejection flags (batch/auto) are set properly,
	4) edits in Spam folder don't have ApproveAll/Reject/RejectAll links,
	5) after the user is unblocked, new edits go into the Pending folder,
	6) proper log entry is created about the fact of block/unblock,
	7) block/unblock log entries are properly formatted on Special:Log.

12. [ModerationTestEdit.php]
	Answers the question: "Does the editing work as usual?"
	Here we check that
	1) signatures (~~~~) are substituted in edits sent to moderation,
	2) sections can be edited.

13. [ModerationTestPreload.php]
	Answers the question: "Can the user continue editing his revision?"
	Here we check that
	1) text from the last queued edit is preloaded into the edit form,
	2) text is preloaded for both logged in and anonymous users,
	3) edit summary is restored when preloading existing pages,
	4) "ext.moderation.edit" module is loaded if something was preloaded,
	5) check that (moderation-editing-your-version) message is shown.
